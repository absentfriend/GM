##4.00.014##
import base64, codecs
magic = 'aW1wb3J0IHVybGxpYixvcyxyZSxzeXMsYmFzZTY0LGpzb24sdGltZSxyZXF1ZXN0cyxpbXBvcnRsaWIsd2hvc3RyZWFtcyx1cGRhdGVyLHB5eGJtY3Qsc2l4CmZyb20ga29kaV9zaXggaW1wb3J0IHhibWMsIHhibWNhZGRvbiwgeGJtY3BsdWdpbiwgeGJtY2d1aSwgeGJtY3Zmcwpmcm9tIHNpeC5tb3Zlcy51cmxsaWIucGFyc2UgaW1wb3J0IHBhcnNlX3FzLCBxdW90ZV9wbHVzLCB1cmxwYXJzZSwgcGFyc2VfcXNsCmZyb20gc2l4IGltcG9ydCBQWTIKZnJvbSByZXNvdXJjZXMubGlicy5tb2R1bGVzIGltcG9ydCB3b3JrZXJzCmZyb20gcmVzb3VyY2VzLmxpYnMubW9kdWxlcyBpbXBvcnQgbWluaXJlc29sdmVyCiNmcm9tIHJlc291cmNlcy5saWJzLmNvbW1vbl9hZGRvbiBpbXBvcnQgQWRkb24KZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKaW1wb3J0IHJlc29sdmV1cmwKdHJhbnNsYXRlUGF0aCA9IHhibWMudHJhbnNsYXRlUGF0aCBpZiBQWTIgZWxzZSB4Ym1jdmZzLnRyYW5zbGF0ZVBhdGgKYWRkb25faWQgICAgICAgICAgICA9ICdwbHVnaW4udmlkZW8ubmVtZXNpc2FpbycKc2VsZkFkZG9uICAgICAgICAgICA9IHhibWNhZGRvbi5BZGRvbihpZD1hZGRvbl9pZCkKQWRkb25UaXRsZSAgICAgICAgICA9ICdbQ09MT1IgeWVsbG93XVtCXU5lbWVzaXNBaW9bL0JdWy9DT0xPUl0nCkFkZG9uWE1MICAgICAgICAgICAgPSB0cmFuc2xhdGVQYXRoKG9zLnBhdGguam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zLycgKyBhZGRvbl9pZCwgJ2FkZG9uLnhtbCcpKQphZGRvblBhdGggICAgICAgICAgID0gb3MucGF0aC5qb2luKG9zLnBhdGguam9pbih0cmFuc2xhdGVQYXRoKCdzcGVjaWFsOi8vaG9tZScpLCAnYWRkb25zJyksJ3BsdWdpbi52aWRlby5uZW1lc2lzYWlvJykKZmFuYXJ0cyAgICAgICAgICAgICA9IHRyYW5zbGF0ZVBhdGgob3MucGF0aC5qb2luKCdzcGVjaWFsOi8vaG9tZS9hZGRvbnMvJyArIGFkZG9uX2lkLCAnZmFuYXJ0LmpwZycpKQpmYW5hcnQgICAgICAgICAgICAgID0gdHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQsICdmYW5hcnQuanBnJykpCmljb24gICAgICAgICAgICAgICAgPSB0cmFuc2xhdGVQYXRoKG9zLnBhdGguam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zLycgKyBhZGRvbl9pZCwgJ2ljb24uZ2lmJykpCkFkZG9uaWNvbiAgICAgICAgICAgPSB0cmFuc2xhdGVQYXRoKG9zLnBhdGguam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zLycgKyBhZGRvbl9pZCwgJ2ljb24uZ2lmJykpCkFkZG9uSWNvbiAgICAgICAgICAgPSB0cmFuc2xhdGVQYXRoKG9zLnBhdGguam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zLycgKyBhZGRvbl9pZCwgJ2ljb24uZ2lmJykpCkJhY2tncm91bmRfSW1hZ2UgICAgPSB0cmFuc2xhdGVQYXRoKG9zLnBhdGguam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zLycgKyBhZGRvbl9pZCwgJ2ltYWdlcy9iYWNrZ3JvdW5kLmpwZycpKQpMaXN0YmcgICAgICAgICAgICAgID0gdHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQsICdpbWFnZXMvbGlzdGJnLnBuZycpKQpMaXN0X0JhY2sgICAgICAgICAgID0gdHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQsICdpbWFnZXMvbGlzdC5wbmcnKSkKRm91cksgICAgICAgICAgICAgICA9IHRyYW5zbGF0ZVBhdGgob3MucGF0aC5qb2luKCdzcGVjaWFsOi8vaG9tZS9hZGRvbnMvJyArIGFkZG9uX2lkLCAnaW1hZ2VzLzRrLnBuZycpKQpDaGF0QkcgICAgICAgICAgICAgID0gdHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQsICdpbWFnZXMvY2hhdGJnLmpwZycpKQpGSEQgICAgICAgICAgICAgICAgID0gdHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQsICdpbWFnZXMvMTA4MC5wbmcnKSkKSEQgICAgICAgICAgICAgICAgICA9IHRyYW5zbGF0ZVBhdGgob3MucGF0aC5qb2luKCdzcGVjaWFsOi8vaG9tZS9hZGRvbnMvJyArIGFkZG9uX2lkLCAnaW1hZ2VzL0hELnBuZycpKQpTRCAgICAgICAgICAgICAgICAgID0gdHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQsICdpbWFnZXMvU0QucG5nJykpCmRwICAgICAgICAgICAgICAgICAgPSB4Ym1jZ3VpLkRpYWxvZ1Byb2dyZXNzKCkKZGlhbG9nICAgICAgICAgICAgICA9IHhibWNndWkuRGlhbG9nKCkKYWR1bHRwYXNzICAgICAgICAgICA9IHNlbGZBZGRvbi5nZXRTZXR0aW5nKCdwYXNzd29yZCcpCmNoYXRuYW1lICAgICAgICAgICAgPSBzZWxmQWRkb24uZ2V0U2V0dGluZygnY2hhdG5hbWUnKQp0bWRiYXBpICAgICAgICAgICAgID0gJzUxMzUzMzRkYWEzMzI1MWJjNDA3ZTVmMjRjYjFjNmE1Jwp5b3V0dWJlYXBpICAgICAgICAgID0gJ0FJemFTeUJrTURHdEdLaFBDZEZlazBrWmlONWR5OUsyQUcwRDd6YycKSW1nRm9sZGVyID0gJy9yZXNvdXJjZXMvSW1hZ2VzLycKZmluYWxzb3VyY2VzID0gW10KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKI0lNQUdFUwojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwpNb3ZpZXNJbWcgPSB0cmFuc2xhdGVQYXRoKG9zLnBhdGguam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zLycgKyBhZGRvbl9pZCArIEltZ0ZvbGRlciwgJ01vdmllcy5naWYnKSkKVHZTaG93c0ltZyA9IHRyYW5zbGF0ZVBhdGgob3MucGF0aC5qb2luKCdzcGVjaWFsOi8vaG9tZS9hZGRvbnMvJyArIGFkZG9uX2lkICsgSW1nRm9sZGVyLCAnVHYtU2hvd3MuZ2lmJykpClNwb3J0c0ltZyA9IHRyYW5zbGF0ZVBhdGgob3MucGF0aC5qb2luKCdzcGVjaWFsOi8vaG9tZS9hZGRvbnMvJyArIGFkZG9uX2lkICsgSW1nRm9sZGVyLCAnU3BvcnRzLmdpZicpKQpNdXNpY0ltZyA9IHRyYW5zbGF0ZVBhdGgob3MucGF0aC5qb2luKCdzcGVjaWFsOi8vaG9tZS9hZGRvbnMvJyArIGFkZG9uX2lkICsgSW1nRm9sZGVyLCAnTXVzaWMuZ2lmJykpCkNhcnRvb25zSW1nID0gdHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQgKyBJbWdGb2xkZXIsICdDYXJ0b29ucy5naWYnKSkKS2lkc0ltZyA9IHRyYW5zbGF0ZVBhdGgob3MucGF0aC5qb2luKCdzcGVjaWFsOi8vaG9tZS9hZGRvbnMvJyArIGFkZG9uX2lkICsgSW1nRm9sZGVyLCAnS2lkcy5naWYnKSkKQW5pbWVJbWcgPSB0cmFuc2xhdGVQYXRoKG9zLnBhdGguam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zLycgKyBhZGRvbl9pZCArIEltZ0ZvbGRlciwgJ0FuaW1lLmdpZicpKQpXZWJjYW1zSW1nID0gdHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQgKyBJbWdGb2xkZXIsICdXZWJjYW1zLmdpZicpKQpHYW1pbmdJbWcgPSB0cmFuc2xhdGVQYXRoKG9zLnBhdGguam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zLycgKyBhZGRvbl9pZCArIEltZ0ZvbGRlciwgJ0dhbWluZy5naWYnKSkKRG9jSW1nID0gdHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQgKyBJbWdGb2xkZXIsICdEb2N1bWVudGFyaWVzLmdpZicpKQpYWFhJbWcgPSB0cmFuc2xhdGVQYXRoKG9zLnBhdGguam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zLycgKyBhZGRvbl9pZCArIEltZ0ZvbGRlciwgJ3h4eC5naWYnKSkKTWFpbnRlbmFuY2VJbWcgPSB0cmFuc2xhdGVQYXRoKG9zLnBhdGguam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zLycgKyBhZGRvbl9pZCArIEltZ0ZvbGRlciwgJ01haW50ZW5hbmNlLmdpZicpKQpOZXh0UGFnZUltZyA9IHRyYW5zbGF0ZVBhdGgob3MucGF0aC5qb2luKCdzcGVjaWFsOi8vaG9tZS9hZGRvbnMvJyArIGFkZG9uX2lkICsgSW1nRm9sZGVyLCAnTmV4dC1QYWdlLmdpZicpKQpkZWYgU0VUX1ZJRVcoKToKICAgIHhibWNfdmVyc2lvbj14Ym1jLmdldEluZm9MYWJlbCgiU3lzdGVtLkJ1aWxkVmVyc2lvbiIpCiAgICB2ZXJzaW9uPWZsb2F0KHhibWNfdmVyc2lvbls6NF0pCiAgICBpZiB2ZXJzaW9uID49IDExLjAgYW5kIHZlcnNpb24gPD0gMTEuOToKICAgICAgICBjb2RlbmFtZSA9ICdFZGVuJwogICAgZWxpZiB2ZXJzaW9uID49IDEyLjAgYW5kIHZlcnNpb24gPD0gMTIuOToKICAgICAgICBjb2RlbmFtZSA9ICdGcm9kbycKICAgIGVsaWYgdmVyc2lvbiA+PSAxMy4wIGFuZCB2ZXJzaW9uIDw9IDEzLjk6CiAgICAgICAgY29kZW5hbWUgPSAnR290aGFtJwogICAgZWxpZiB2ZXJzaW9uID49IDE0LjAgYW5kIHZlcnNpb24gPD0gMTQuOToKICAgICAgICBjb2RlbmFtZSA9ICdIZWxpeCcKICAgIGVsaWYgdmVyc2lvbiA+PSAxNS4wIGFuZCB2ZXJzaW9uIDw9IDE1Ljk6CiAgICAgICAgY29kZW5hbWUgPSAnSXNlbmdhcmQnCiAgICBlbGlmIHZlcnNpb24gPj0gMTYuMCBhbmQgdmVyc2lvbiA8PSAxNi45OgogICAgICAgIGNvZGVuYW1lID0gJ0phcnZpcycKICAgIGVsaWYgdmVyc2lvbiA+PSAxNy4wIGFuZCB2ZXJzaW9uIDw9IDE3Ljk6CiAgICAgICAgY29kZW5hbWUgPSAnS3J5cHRvbicKICAgIGVsaWYgdmVyc2lvbiA+PSAxOC4wIGFuZCB2ZXJzaW9uIDw9IDE4Ljk6CiAgICAgICAgY29kZW5hbWUgPSAnTGVpYScKICAgIGVsc2U6IGNvZGVuYW1lID0gIkRlY2xpbmUiCiAgICBpZiBjb2RlbmFtZSA9PSAiSmFydmlzIjoKICAgICAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCdDb250YWluZXIuU2V0Vmlld01vZGUoNTApJykKICAgIGVsaWYgY29kZW5hbWUgPT0gIktyeXB0b24iOgogICAgICAgIHhibWMuZXhlY3V0ZWJ1aWx0aW4oJ0NvbnRhaW5lci5TZXRWaWV3TW9kZSg1NSknKQogICAgZWxpZiBjb2RlbmFtZSA9PSAiTGVpYSI6CiAgICAgICAgeGJtYy5leGVjdXRlYnVpbHRpbignQ29udGFpbmVyLlNldFZpZXdNb2RlKDU1KScpCiAgICBlbHNlOiB4Ym1jLmV4ZWN1dGVidWlsdGluKCdDb250YWluZXIuU2V0Vmlld01vZGUoNTApJykKZGVmIEdldE1lbnUoKToKICAgIHRyeToKICAgICAgICBjdXJyZW50dmVyc2lvbmNoZWNrID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vbmVtZXNpczY2OC9yZXBvc2l0b3J5LnN0cmVhbWFybXkxOC0xOS9tYWluL2FkZG9ucy54bWwnKS50ZXh0CiAgICAgICAgY3VycmVudHZlcnNpb24gPSByZS5maW5kYWxsKCc8YWRkb24gaWQ9InBsdWdpbi52aWRlby5uZW1lc2lzYWlvIi4qP3ZlcnNpb249IiguKj8pIicsY3VycmVudHZlcnNpb25jaGVjayxmbGFncz1yZS5ET1RBTEwpWzBdCiAgICAgICAgd2l0aCBvcGVuIChBZGRvblhNTCkgYXMgRjoKICAgICAgICAgICAgeW91cnZlcnNpb24gPSByZS5maW5kYWxsKCc8YWRkb24gaWQ9InBsdWdpbi52aWRlby5uZW1lc2lzYWlvIi4qP3ZlcnNpb249IiguKj8pIicsRi5yZWFkKCksZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgIGlmIGN1cnJlbnR2ZXJzaW9uID09IHlvdXJ2ZXJzaW9uOgogICAgICAgICAgICBhZGRTdGFuZGFyZExpbmsoJ1tDT0xPUiBsaW1lXVtCXUFkZG9uIFVwIFRvIERhdGVbL0JdWy9DT0xPUl0nLCdNT1ZJRVMnLDk5OTksQWRkb25pY29uLGZhbmFydCxkZXNjcmlwdGlvbj0nWW91ciBSdW5uaW5nIFRoZSBMYXRlc3QgVmVyc2lvbiBPZiBOZW1lc2lzQWlvJykKICAgICAgICBlbHNlOiBhZGRTdGFuZGFyZExpbmsoJ1tDT0xPUiBvcmFuZ2VdW0JdQWRkb24gT3V0IE9mIERhdGUgOiBbQ09MT1IgeWVsbG93XUNsaWNrIEhlcmUgVG8gVXBkYXRlWy9CXVsvQ09MT1JdJywnTU9WSUVTJywyMDAwLEFkZG9uaWNvbixmYW5hcnQsZGVzY3JpcHRpb249J1dlIE5lZWQgVG8gVXBkYXRlIFlvdXIgQWRkb24nKQogICAgZXhjZXB0OiBwYXNzCiAgICBhZGRTdGFuZGFyZExpbmsoJ1tDT0xPUiBvcmFuZ2VdW0JdSm9pbiBBIFdhdGNoIFBhcnR5Wy9CXVsvQ09MT1JdJywnTU9WSUVTJywzMDAxLEFkZG9uaWNvbixmYW5hcnQsZGVzY3JpcHRpb249J0xldHMgV2F0Y2ggV2l0aCBGcmllbmRzJykKICAgIGFkZFN0YW5kYXJkTGluaygnW0NPTE9SIGFxdWFdW0JdSm9pbiBOZW1lc2lzQWlvIENoYXQgUm9vbVsvQl1bL0NPTE9SXScsJ0NIQVQnLDQwMDAsTW92aWVzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nQ2hhdCBXaXRoIE90aGVyIFVzZXJzJykKICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1Nb3ZpZXNbL0JdWy9DT0xPUl0nLCdNT1ZJRVMnLDEsTW92aWVzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nR3JhYiBUaGUgUG9wY29ybiBBbmQgV2F0Y2ggQSBGaWxtJykKICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1UdiBTaG93c1svQl1bL0NPTE9SXScsJ1RWU0hPV1MnLDEsVHZTaG93c0ltZyxmYW5hcnQsZGVzY3JpcHRpb249J0xldHMgV2F0Y2ggT3VyIEZhdiBUdiBTaG93JykKICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1MaXZlIFNwb3J0cyAmIFJlcGxheXNbL0JdWy9DT0xPUl0nLCdTUE9SVFMnLDEsU3BvcnRzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nU3BvcnRzIFRpbWUsIENvbWUgT24gWW91IFJlZHMgI1lOV0EnKQogICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXU11c2ljICYgUmFkaW9bL0JdWy9DT0xPUl0nLCdNVVNJQycsMSxNdXNpY0ltZyxmYW5hcnQsZGVzY3JpcHRpb249J0RhbmNlIEFyb3VuZCBMaWtlIE5vIE9uZSBJcyBXYXRjaGluZycpCiAgICBhZGREaXIoJ1tDT0xPUiB5ZWxsb3ddW0JdRG9jdW1lbnRhcmllc1svQl1bL0NPTE9SXScsJ0RPQ1MnLDEsRG9jSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nV2UgQWxsIExpa2UgQSBHb29kIERvY3VtZW50YXJ5JykKICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1DYXJ0b29uc1svQl1bL0NPTE9SXScsJ2h0dHA6Ly93d3cudG9vbmdldC5uZXQvY2FydG9vbicsMjIsQ2FydG9vbnNJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdUaGF0cyBBbGwgRm9sa3MnKQogICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXUtpZHNbL0JdWy9DT0xPUl0nLCdLSURTJywxLEtpZHNJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdHcm93IFRoZWlyIEltYWdpbmF0aW9uJykKICAgIGFkZFN0YW5kYXJkTGluaygnW0NPTE9SIHllbGxvd11bQl1BbmltZVsvQl1bL0NPTE9SXScsJ251bGwnLDQyLEFuaW1lSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nRm9yIFRoZSBCaWcgS2lkcyBJbiBUaGUgSG91c2UnKQogICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXVdlYmNhbXNbL0JdWy9DT0xPUl0nLCdXRUJDQU1TJywxLFdlYmNhbXNJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdFeWUgU3B5IFdpdGggTXkgTGl0dGxlIEV5ZScpCiAgICBhZGREaXIoJ1tDT0xPUiB5ZWxsb3ddW0JdR2FtaW5nIFZpZGVvc1svQl1bL0NPTE9SXScsJ0dBTUlORycsMSxHYW1pbmdJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdXZSBBbGwgTG92ZSBUbyBHYW1lIFJlYWxseScpCiAgICBhZGREaXIoJ1tDT0xPUiB5ZWxsb3ddW0JdWFhYWy9CXVsvQ09MT1JdJywncnVsJyw5OTYsWFhYSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nR290IFRoZSBXZXQgV2lwZXMnKQogICAgYWRkRGlyKCdbQ09MT1IgcmVkXVtCXVNldHRpbmdzICYgTWFpbnRlbmFuY2VbL0JdWy9DT0xPUl0nLCdydWwnLDk5OSxNYWludGVuYW5jZUltZyxmYW5hcnQsZGVzY3JpcHRpb249J1RoZSBUZWNoaW5pY2FsIFN0dWZmJykKICAgICNhZGRTdGFuZGFyZExpbmsoJ1tDT0xPUiByZWRdW0JdVGVzdCBXaW5kb3dbL0JdWy9DT0xPUl0nLCdydWwnLDQzLE1haW50ZW5hbmNlSW1nLEJhY2tncm91bmRfSW1hZ2UsZGVzY3JpcHRpb249J1RoZSBUZWNoaW5pY2FsIFN0dWZmJykKICAgIHhibWMuZXhlY3V0ZWJ1aWx0aW4oJ0NvbnRhaW5lci5TZXRWaWV3TW9kZSg1NSknKQpkZWYgR2V0Q29udGVudChuYW1lLHVybCxpY29uaW1hZ2UsZmFuYXJ0KToKICAgIGlmICdNT1ZJRVMnIGluIHVybDoKICAgICAgICAjQ0hFQ0tTQ1JBUEVSUygpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgbGltZV1bQl1TZWFyY2ggTW92aWVzWy9CXVsvQ09MT1JdJywnU0VBUkNIJyw0LE1vdmllc0ltZyxmYW5hcnQsZGVzY3JpcHRpb249J0dyYWIgVGhlIFBvcGNvcm4gQW5kIFdhdGNoIEEgRmlsbScpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXVRvcCBNb3ZpZXNbL0JdWy9DT0xPUl0nLCdUT1AgTU9WSUVTJyw0LE1vdmllc0ltZyxmYW5hcnQsZGVzY3JpcHRpb249J0dyYWIgVGhlIFBvcGNvcm4gQW5kIFdhdGNoIEEgRmlsbScpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXVBlb3BsZSBXYXRjaGluZ1svQl1bL0NPTE9SXScsJ05PVyBQTEFZSU5HJyw0LE1vdmllc0ltZyxmYW5hcnQsZGVzY3JpcHRpb249J0dyYWIgVGhlIFBvcGNvcm4gQW5kIFdhdGNoIEEgRmlsbScpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXUluIENpbmVtYXNbL0JdWy9DT0xPUl0nLCdDSU5FTUEnLDQsTW92aWVzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nR3JhYiBUaGUgUG9wY29ybiBBbmQgV2F0Y2ggQSBGaWxtJykKICAgICAgICBhZGREaXIoJ1tDT0xPUiB5ZWxsb3ddW0JdVXBjb21pbmcgTW92aWUgVHJhaWxlcnNbL0JdWy9DT0xPUl0nLCdQTFJEbm52eC00eFoxVzZ0ajM4RnVuMHNaUG5UYWYxSmdXJyw1LE1vdmllc0ltZyxmYW5hcnQsZGVzY3JpcHRpb249J0dyYWIgVGhlIFBvcGNvcm4gQW5kIFdhdGNoIEEgRmlsbScpCiAgICAgICAgQ2hlY2tGb3JMaXN0cygnTU9WSUVTJykKICAgIGVsaWYgJ1RWU0hPV1MnIGluIHVybDoKICAgICAgICBhZGREaXIoJ1tDT0xPUiBsaW1lXVtCXVNlYXJjaCBUdiBTaG93c1svQl1bL0NPTE9SXScsJ1RWSFVOVCcsNCxNb3ZpZXNJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdHcmFiIFRoZSBQb3Bjb3JuIEFuZCBXYXRjaCBBIEZpbG0nKQogICAgICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1Qb3B1bGFyIFNob3dzWy9CXVsvQ09MT1JdJywnVE9QIFRWJyw0LFR2U2hvd3NJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdMZXRzIFdhdGNoIE91ciBGYXZvdXJpdGUgU2hvdycpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXUFpcmluZyBUb2RheVsvQl1bL0NPTE9SXScsJ0FJUklORyBUT0RBWScsNCxUdlNob3dzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nV2hhdHMgT24gVG9kYXknKQogICAgICAgICNhZGREaXIoJ1tDT0xPUiB5ZWxsb3ddW0JdV2hhdHMgT24gVGhpcyBXZWVrWy9CXVsvQ09MT1JdJywnaHR0cHM6Ly9wcm9qZWN0ZnJlZXR2Lnh5ei90dnNob3dzJyw5LFR2U2hvd3NJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdXaGF0cyBPbiBUb2RheScpCiAgICAgICAgI2FkZERpcignW0NPTE9SIHllbGxvd11bQl0yNCAvIDcgVHYgU2hvd3NbL0JdWy9DT0xPUl0nLCdodHRwczovL3d3dy5hcmNvbmFpdHYudXMvaW5kZXgucGhwI3Nob3dzJywxMyxUdlNob3dzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nTGV0cyBCaW5nZSBXYXRjaCcpCiAgICBlbGlmICdTUE9SVFMnIGluIHVybDoKICAgICAgICBDaGVja0Zvckxpc3RzKCdTUE9SVFMnKQogICAgICAgIGFkZERpcignW0NPTE9SIGxpbWVdW0JdNiBTdHJlYW0gW0NPTE9SIHJlZF18W0NPTE9SIHllbGxvd11ORkwvTkNBRkYvTUxCL05ITC9GMS9VRkMvQm94aW5nWy9CXVsvQ09MT1JdJywnaHR0cDovLzZzdHJlYW0ueHl6LycsNTIsU3BvcnRzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nW0NPTE9SIHllbGxvd11MZXRzIFdhdGNoIFNwb3J0c1svQ09MT1JdJykKICAgICAgICBhZGREaXIoIltDT0xPUiBsaW1lXVtCXURhaWx5IEV2ZW50cyBbQ09MT1IgcmVkXXxbQ09MT1IgeWVsbG93XUZvb3RpZS9GMS9VRkMvQm94aW5nWy9CXVsvQ09MT1JdIiwnaHR0cDovL2hoZHN0cmVhbXMuY2x1Yi8nLDM4LFNwb3J0c0ltZyxmYW5hcnQsJ1tDT0xPUiB5ZWxsb3ddTGV0cyBXYXRjaCBTcG9ydHNbL0NPTE9SXScpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgbGltZV1bQl1Tb2NjZXIgU3RyZWFtcyBbQ09MT1IgcmVkXXxbQ09MT1IgeWVsbG93XUZvb3RpZS9ORkwvTkNBRkYvTUxCL05ITC9GMS9VRkMvQm94aW5nWy9CXVsvQ09MT1JdJywnRk9PVElFJyw0MCxTcG9ydHNJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdbQ09MT1IgeWVsbG93XUxldHMgV2F0Y2ggU3BvcnRzWy9DT0xPUl0nKQogICAgICAgICNhZGREaXIoJ1tDT0xPUiBsaW1lXVtCXVNvY2NlcjI0SEQgW0NPTE9SIHJlZF18W0NPTE9SIHllbGxvd11Gb290aWVbL0JdWy9DT0xPUl0nLCdodHRwczovL3d3LnNvY2NlcjI0aGQuY29tLycsNTUsU3BvcnRzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nW0NPTE9SIHllbGxvd11MZXRzIFdhdGNoIFNwb3J0c1svQ09MT1JdJykKICAgICAgICBhZGREaXIoJ1tDT0xPUiBsaW1lXVtCXURhZGR5IFNwb3J0cyBbQ09MT1IgcmVkXXxbQ09MT1IgeWVsbG93XUZvb3RpZS9ORkwvTkNBRkYvTUxCL05ITC9GMS9VRkMvQm94aW5nWy9CXVsvQ09MT1JdJywnbnVsbCcsNTAsU3BvcnRzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nW0NPTE9SIHllbGxvd11MZXRzIFdhdGNoIFNwb3J0c1svQ09MT1JdJykKICAgICAgICAjYWRkRGlyKCJbQ09MT1IgeWVsbG93XVtCXU5GTCBSZXBsYXlzWy9CXVsvQ09MT1JdIiwnUExNM2t6SGw0cnBoSno5eW9JaU81NXRMZ0VadmZmelo0aycsNSxTcG9ydHNJbWcsZmFuYXJ0LCdbQ09MT1IgeWVsbG93XUxldHMgV2F0Y2ggU3BvcnRzWy9DT0xPUl0nKQogICAgICAgIGFkZFN0YW5kYXJkTGluaygnW0NPTE9SIGxpbWVdW0JdRmlnaHQgQ2x1YiBSZXBsYXlzIFtDT0xPUiByZWRdfFtDT0xPUiB5ZWxsb3ddVUZDL0JveGluZy9XV0UvTU1BWy9CXVsvQ09MT1JdJywnbnVsbCcsNDksU3BvcnRzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nQWxsIFlvdXIgRmlnaHQgUmVwbGF5cycpCiAgICAgICAgI2FkZERpcigiW0NPTE9SIGxpbWVdW0JdTGl2ZVtDT0xPUiB5ZWxsb3ddIEdvbGZbL0JdWy9DT0xPUl0iLCdodHRwczovL3d3dy5yZWRkaXQuY29tL3IvUHV0dFN0cmVhbXMuanNvbicsMTEsU3BvcnRzSW1nLGZhbmFydCwnW0NPTE9SIHllbGxvd11MZXRzIFdhdGNoIFNwb3J0c1svQ09MT1JdJykKICAgIGVsaWYgJ01VU0lDJyBpbiB1cmw6CiAgICAgICAgYWRkRGlyKCdbQ09MT1IgbGltZV1bQl1TZWFyY2ggQSBTb25nWy9CXVsvQ09MT1JdJywnU0VBUkNIIFNPTkcnLDIwLE1vdmllc0ltZyxmYW5hcnQsZGVzY3JpcHRpb249J1NlYXJjaCBGb3IgQSBTb25nIFlvdSBGYW5jeScpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgbGltZV1bQl1TZWFyY2ggQW4gQXJ0aXN0Wy9CXVsvQ09MT1JdJywnU0VBUkNIIEFSVElTVCcsMjAsTW92aWVzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nU2VhcmNoIEZvciBBbiBBcnRpc3RzIFBsYXlsaXN0JykKICAgICAgICBhZGREaXIoJ1tDT0xPUiB5ZWxsb3ddW0JdUmFkaW8gU3RhdGlvbnMgRnJvbSBBcm91bmQgVGhlIFdvcmxkWy9CXVsvQ09MT1JdJywnaHR0cHM6Ly93d3cuaW50ZXJuZXQtcmFkaW8uY29tL3N0YXRpb25zLycsMTUsTXVzaWNJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdNdXNpYyBGcm9tIEFyb3VuZCBUaGUgV29ybGQnKQogICAgICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1NdXNpYyBWaWRlb3NbL0JdWy9DT0xPUl0nLCdNVVNJQyBWSURFT1MnLDE5LE11c2ljSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nTXVzaWMgVmlkZW9zIEZyb20gWW91dHViZSBQbGF5bGlzdHMnKQogICAgICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1LYXJhb2tlWy9CXVsvQ09MT1JdJywnS0FSQU9LRScsMTksTXVzaWNJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdNdXNpYyBWaWRlb3MgRnJvbSBZb3V0dWJlIFBsYXlsaXN0cycpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXU11c2ljYWwgTW92aWVzWy9CXVsvQ09MT1JdJywnTVVTSUNBTCBNT1ZJRVMnLDQsTW92aWVzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nV2F0Y2ggQSBGaWxtICYgRGFuY2UnKQogICAgZWxpZiAnS0lEUycgaW4gdXJsOgogICAgICAgIENoZWNrRm9yTGlzdHMoJ0tJRFMnKQogICAgZWxpZiAnR0FNSU5HJyBpbiB1cmw6CiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXUZvcnRuaXRlWy9CXVsvQ09MT1JdJywoJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3lvdXR1YmUvdjMvc2VhcmNoP3BhcnQ9c25pcHBldCZxPUZvcnRuaXRlJnR5cGU9cGxheWxpc3Qma2V5PSVzJm1heFJlc3VsdHM9NTAnICUgeW91dHViZWFwaSksMTksR2FtaW5nSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nTGV0cyBHYW1lLi4uR2FtZSBPbicpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXVBVQkdbL0JdWy9DT0xPUl0nLCgnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20veW91dHViZS92My9zZWFyY2g/cGFydD1zbmlwcGV0JnE9UFVCRyZ0eXBlPXBsYXlsaXN0JmtleT0lcyZtYXhSZXN1bHRzPTUwJyAlIHlvdXR1YmVhcGkpLDE5LEdhbWluZ0ltZyxmYW5hcnQsZGVzY3JpcHRpb249J0xldHMgR2FtZS4uLkdhbWUgT24nKQogICAgICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1DYWxsIE9mIER1dHlbL0JdWy9DT0xPUl0nLCgnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20veW91dHViZS92My9zZWFyY2g/cGFydD1zbmlwcGV0JnE9Q2FsbCtPZitEdXR5JnR5cGU9cGxheWxpc3Qma2V5PSVzJm1heFJlc3VsdHM9NTAnICUgeW91dHViZWFwaSksMTksR2FtaW5nSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nTGV0cyBHYW1lLi4uR2FtZSBPbicpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXVJvY2tldCBMZWFndWVbL0JdWy9DT0xPUl0nLCgnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20veW91dHViZS92My9zZWFyY2g/cGFydD1zbmlwcGV0JnE9Um9ja2V0K0xlYWd1ZSZ0eXBlPXBsYXlsaXN0JmtleT0lcyZtYXhSZXN1bHRzPTUwJyAlIHlvdXR1YmVhcGkpLDE5LEdhbWluZ0ltZyxmYW5hcnQsZGVzY3JpcHRpb249J0xldHMgR2FtZS4uLkdhbWUgT24nKQogICAgICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1MZWFndWUgT2YgTGVnZW5kc1svQl1bL0NPTE9SXScsKCdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS95b3V0dWJlL3YzL3NlYXJjaD9wYXJ0PXNuaXBwZXQmcT1MZWFndWUrT2YrTGVnZW5kcyZ0eXBlPXBsYXlsaXN0JmtleT0lcyZtYXhSZXN1bHRzPTUwJyAlIHlvdXR1YmVhcGkpLDE5LEdhbWluZ0ltZyxmYW5hcnQsZGVzY3JpcHRpb249J0xldHMgR2FtZS4uLkdhbWUgT24nKQogICAgICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1CYXR0bGVmaWVsZFsvQl1bL0NPTE9SXScsKCdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS95b3V0dWJlL3YzL3NlYXJjaD9wYXJ0PXNuaXBwZXQmcT1CYXR0bGVmaWVsZCtHYW1lJnR5cGU9cGxheWxpc3Qma2V5PSVzJm1heFJlc3VsdHM9NTAnICUgeW91dHViZWFwaSksMTksR2FtaW5nSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nTGV0cyBHYW1lLi4uR2FtZSBPbicpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXUdob3N0IFJlY29uWy9CXVsvQ09MT1JdJywoJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3lvdXR1YmUvdjMvc2VhcmNoP3BhcnQ9c25pcHBldCZxPUdob3N0K1JlY29uJnR5cGU9cGxheWxpc3Qma2V5PSVzJm1heFJlc3VsdHM9NTAnICUgeW91dHViZWFwaSksMTksR2FtaW5nSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nTGV0cyBHYW1lLi4uR2FtZSBPbicpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXVdvcmxkIE9mIFdhcmNyYWZ0Wy9CXVsvQ09MT1JdJywoJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3lvdXR1YmUvdjMvc2VhcmNoP3BhcnQ9c25pcHBldCZxPVdvcmxkK09mK1dhcmNyYWZ0JnR5cGU9cGxheWxpc3Qma2V5PSVzJm1heFJlc3VsdHM9NTAnICUgeW91dHViZWFwaSksMTksR2FtaW5nSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nTGV0cyBHYW1lLi4uR2FtZSBPbicpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXVJlZCBEZWFkIDJbL0JdWy9DT0xPUl0nLCgnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20veW91dHViZS92My9zZWFyY2g/cGFydD1zbmlwcGV0JnE9UmVkK0RlYWQrMiZ0eXBlPXBsYXlsaXN0JmtleT0lcyZtYXhSZXN1bHRzPTUwJyAlIHlvdXR1YmVhcGkpLDE5LEdhbWluZ0ltZyxmYW5hcnQsZGVzY3JpcHRpb249J0xldHMgR2FtZS4uLkdhbWUgT24nKQogICAgICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1NaW5lQ3JhZnRbL0JdWy9DT0xPUl0nLCgnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20veW91dHViZS92My9zZWFyY2g/cGFydD1zbmlwcGV0JnE9TWluZWNyYWZ0JnR5cGU9cGxheWxpc3Qma2V5PSVzJm1heFJlc3VsdHM9NTAnICUgeW91dHViZWFwaSksMTksR2FtaW5nSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nTGV0cyBHYW1lLi4uR2FtZSBPbicpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXUFzc2Fzc2lucyBDcmVlZFsvQl1bL0NPTE9SXScsKCdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS95b3V0dWJlL3YzL3NlYXJjaD9wYXJ0PXNuaXBwZXQmcT1Bc3Nhc3NpbnMrQ3JlZWQmdHlwZT1wbGF5bGlzdCZrZXk9JXMmbWF4UmVzdWx0cz01MCcgJSB5b3V0dWJlYXBpKSwxOSxHYW1pbmdJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdMZXRzIEdhbWUuLi5HYW1lIE9uJykKICAgICAgICBhZGREaXIoJ1tDT0xPUiB5ZWxsb3ddW0JdVGhlIERpdmlzaW9uIDJbL0JdWy9DT0xPUl0nLCgnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20veW91dHViZS92My9zZWFyY2g/cGFydD1zbmlwcGV0JnE9VGhlK0RpdmlzaW9uKzImdHlwZT1wbGF5bGlzdCZrZXk9JXMmbWF4UmVzdWx0cz01MCcgJSB5b3V0dWJlYXBpKSwxOSxHYW1pbmdJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdMZXRzIEdhbWUuLi5HYW1lIE9uJykKICAgICAgICBDaGVja0Zvckxpc3RzKCdHQU1JTkcnKQogICAgZWxpZiAnV0VCQ0FNUycgaW4gdXJsOgogICAgICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1XZWJjYW1zIEJ5IENvdW50cnlbL0JdWy9DT0xPUl0nLCdDT1VOVFJZJywyNSxNb3ZpZXNJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdMZXRzIEJlIE5vc3knKQogICAgICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl1XZWJjYW1zIEJ5IEdlbnJlWy9CXVsvQ09MT1JdJywnR0VOUkUnLDI1LE1vdmllc0ltZyxmYW5hcnQsZGVzY3JpcHRpb249J0xldHMgQmUgTm9zeScpCiAgICBlbGlmICdET0NTJyBpbiB1cmw6CiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXVdhdGNoIERvY3VtZW50YXJpZXNbL0JdWy9DT0xPUl0nLCdodHRwczovL3dhdGNoZG9jdW1lbnRhcmllcy5jb20vJyw1NyxNb3ZpZXNJbWcsZmFuYXJ0LGRlc2NyaXB0aW9uPSdEb2N1bWVudGFyaWVzIEZyb20gV2F0Y2ggRG9jdW1lbnRhcmllcycpCiAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXURvY3VtZW50YXJ5IEhlYXZlblsvQl1bL0NPTE9SXScsJ2h0dHBzOi8vZG9jdW1lbnRhcnloZWF2ZW4uY29tLycsNjAsTW92aWVzSW1nLGZhbmFydCxkZXNjcmlwdGlvbj0nRG9jdW1lbnRhcmllcyBGcm9tIERvY3VtZW50YXJ5IEhlYXZlbicpCmRlZiBHZXRDb250ZW50UmVkZGl0KG5hbWUsdXJsLGljb25pbWFnZSxmYW5hcnQsZGVzY3JpcHRpb24pOgogICAgaWYgJ0ZPT1RJRScgaW4gdXJsOgogICAgICAgIHRlbXB1cmwgPSAnaHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L2F6NzJteUd0JwogICAgICAgIGdldGxpbmsgPSByZXF1ZXN0cy5nZXQodGVtcHVybCkudGV4dAogICAgICAgIHVybCA9ICBnZXRsaW5rCiAgICBmb3VuZCA9IDAKICAgIGJhc2VfZG9tYWluID0gJ2h0dHBzOi8vd3d3LnJlZGRpdC5jb20nCiAgICBIZWFkZXJzID0geydVc2VyLUFnZW50JyA6ICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNjAuMC4zMTEyLjExMyBTYWZhcmkvNTM3LjM2JyB9CiAgICBsaW5rID0gcmVxdWVzdHMuZ2V0KHVybCwgaGVhZGVycz1IZWFkZXJzKS50ZXh0CiAgICBkYXRhID0ganNvbi5sb2FkcyhsaW5rKQogICAgZ2V0ID0gZGF0YVsnZGF0YSddWydjaGlsZHJlbiddCiAgICBmb3IgaSBpbiBnZXQ6CiAgICAgICAgbmFtZSA9IGlbJ2RhdGEnXVsndGl0bGUnXQogICAgICAgIG5hbWUgPSBzdHJpcF9ub25fYXNjaWkobmFtZSkKICAgICAgICBuYW1lID0gc3RyKG5hbWUpCiAgICAgICAgbmFtZSA9IENMRUFOVVAobmFtZSkKICAgICAgICB1cmwgPSBpWydkYXRhJ11bJ3Blcm1hbGluayddCiAgICAgICAgdXJsID0gc3RyaXBfbm9uX2FzY2lpKHVybCkKICAgICAgICB1cmwgPSBzdHIodXJsKQogICAgICAgIGlmICdHTVQnIGluIG5hbWU6CiAgICAgICAgICAgIG5hbWUgPSBuYW1lLnJlcGxhY2UoJ1snLCcnKS5yZXBsYWNlKCddJywnIHwgJykKICAgICAgICAgICAgaWYgbm90IGJhc2VfZG9tYWluIGluIHVybDogdXJsID0gYmFzZV9kb21haW4gKyB1cmwgKyAnLmpzb24nCiAgICAgICAgICAgIGZvdW5kICs9IDEKICAgICAgICAgICAgYWRkRGlyKCdbQl1bQ09MT1IgeWVsbG93XScgKyBuYW1lICsgJ1svQl1bL0NPTE9SXScsdXJsLDEyLGljb24sZmFuYXJ0cywnTGV0cyBXYXRjaCBUaGUgR2FtZScpCiAgICAgICAgZWxpZiAnR2FtZSBUaHJlYWQ6JyBpbiBuYW1lOgogICAgICAgICAgICBpZiBub3QgYmFzZV9kb21haW4gaW4gdXJsOiB1cmwgPSBiYXNlX2RvbWFpbiArIHVybCArICcuanNvbicKICAgICAgICAgICAgZm91bmQgKz0gMQogICAgICAgICAgICBhZGREaXIoJ1tCXVtDT0xPUiB5ZWxsb3ddJyArIG5hbWUgKyAnWy9CXVsvQ09MT1JdJyx1cmwsMTIsaWNvbixmYW5hcnRzLCdMZXRzIFdhdGNoIFRoZSBHYW1lJykKICAgICAgICBlbGlmICdFdmVudCBUaHJlYWQ6JyBpbiBuYW1lOgogICAgICAgICAgICBpZiBub3QgYmFzZV9kb21haW4gaW4gdXJsOiB1cmwgPSBiYXNlX2RvbWFpbiArIHVybCArICcuanNvbicKICAgICAgICAgICAgZm91bmQgKz0gMQogICAgICAgICAgICBhZGREaXIoJ1tCXVtDT0xPUiB5ZWxsb3ddJyArIG5hbWUgKyAnWy9CXVsvQ09MT1JdJyx1cmwsMTIsaWNvbixmYW5hcnRzLCdMZXRzIFdhdGNoIFRoZSBHYW1lJykKICAgICAgICBlbGlmICd2cycgaW4gbmFtZToKICAgICAgICAgICAgaWYgbm90IGJhc2VfZG9tYWluIGluIHVybDogdXJsID0gYmFzZV9kb21haW4gKyB1cmwgKyAnLmpzb24nCiAgICAgICAgICAgIGZvdW5kICs9IDEKICAgICAgICAgICAgYWRkRGlyKCdbQl1bQ09MT1IgeWVsbG93XScgKyBuYW1lICsgJ1svQl1bL0NPTE9SXScsdXJsLDEyLGljb24sZmFuYXJ0cywnTGV0cyBXYXRjaCBUaGUgR2FtZScpCiAgICBpZiBmb3VuZCA9PSAwOiBhZGRMaW5rKCdbQl1bQ09MT1IgeWVsbG93XU5vIEV2ZW50IE9uIEFUTVsvQl1bL0NPTE9SXScsdXJsLDk5OTksaWNvbixmYW5hcnRzLCdObyBMaXZlIEV2ZW50cyBBVE0nKQpkZWYgVGhlTWFnaWModXJsKToKICAgIHVybHMgPSBbXQogICAgYmFkbWF0Y2ggPSBbJ3BybnRzY3IuY29tJywnZmFjZWJvb2suY29tJywnZGlzY29yZC5nZycsJ3JlZGRpdCcsJ3R3aXRjaC50dicsICdlbGl4eCddCiAgICB1YSA9ICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzIuMC4zNjI2LjEyMSBTYWZhcmkvNTM3LjM2JwogICAgaGVhZGVycyA9IHsnVXNlci1BZ2VudCc6IHVhICwKICAgICAgICAgICAgICAgICdSZWZlcmVyJyA6IHVybH0KICAgIGxpbmsgPSByZXF1ZXN0cy5nZXQodXJsLGhlYWRlcnM9aGVhZGVycykudGV4dAogICAgc291cCA9IEJlYXV0aWZ1bFNvdXAobGluaywgJ2h0bWwucGFyc2VyJykKICAgIHRhYmxlID0gc291cC5maW5kKCd0Ym9keScpCiAgICB0YWJsZSA9IHN0cih0YWJsZSkKICAgIHBhdHRlcm4gPSByJycnaHJlZj1bJyJdKFteJyJdKylbJyJdJycnCiAgICBwb3RlbmlhbGxpbmsgPSByZS5maW5kYWxsKHBhdHRlcm4sdGFibGUsZmxhZ3M9cmUuRE9UQUxMKQogICAgZHAuY3JlYXRlIChBZGRvblRpdGxlLCJbQ09MT1IgeWVsbG93XUdvaW5nIEh1bnRpbmcgRm9yIExpbmtzWy9DT0xPUl0iKQogICAgZHAudXBkYXRlKDApCiAgICBmb3IgbGlua3MgaW4gc2V0KHBvdGVuaWFsbGluayk6CiAgICAgICAgaWYgbGlua3Muc3RhcnRzd2l0aCAoJ2h0dHAnKSBhbmQgbm90IGFueSh4IGluIGxpbmtzIGZvciB4IGluIGJhZG1hdGNoKToKICAgICAgICAgICAgdXJscy5hcHBlbmQobGlua3MpCiAgICBUaHJlYWRMaW5rcyh1cmxzKQoKZGVmIFRocmVhZExpbmtzKHVybHMpOgogICAgaW1wb3J0IHRocmVhZGluZwogICAgdWEgPSAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzcyLjAuMzYyNi4xMjEgU2FmYXJpLzUzNy4zNicKICAgIGJhZG1hdGNoID0gWydwcm50c2NyLmNvbScsICdmYWNlYm9vay5jb20nLCAnZGlzY29yZC5nZycsICdyZWRkaXQnLCAndHdpdGNoLnR2JywgJ2VsaXh4JywgJ2dvb2dsZScsICd3aWRnZXRzJywgJ3lvdXR1YmUnLCAnLnBuZycsICcuanBnJywgJ3dpZGdldCddCiAgICBwbGF5YWJsZXMgPSBzZXQoKQogICAgcGF0dGVybl9tM3U4ID0gcmUuY29tcGlsZShyJycnWyciXShbXiciXSttM3U4Lio/KVsnIl0nJycpCiAgICBwYXR0ZXJuX2lmcmFtZSA9IHJlLmNvbXBpbGUocicnJzxpZnJhbWUuKz9zcmM9WyciXShbXiciXSspLio/WyciXScnJykKICAgIGRwLmNyZWF0ZSAoQWRkb25UaXRsZSwiW0NPTE9SIHllbGxvd11TZWFyY2hpbmcgRm9yIExpbmtzWy9DT0xPUl0iKQogICAgZHAudXBkYXRlKDApCiAgICBjaGVja2VkID0gMAogICAgcG90ZW50aWFsID0gbGVuKHVybHMpCiAgICBkZWYgZmV0Y2hfdXJsKHVybCwgX2lmcmFtZT1GYWxzZSk6CiAgICAgICAgaGVhZGVyczIgPSB7J1VzZXItQWdlbnQnOiAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzYwLjAuMzExMi4xMTMgU2FmYXJpLzUzNy4zNicsCiAgICAgICAgJ1JlZmVyZXInOiB1cmx9CiAgICAgICAgdHJ5OgogICAgICAgICAgICB1cmxIYW5kbGVyID0gcmVxdWVzdHMuZ2V0KHVybCwgaGVhZGVycz17J1VzZXItQWdlbnQnOiB1YSwgJ1JlZmVyZXInOiB1cmx9LCB0aW1lb3V0PTUpLnRleHQKICAgICAgICAgICAgaWYgcGF0dGVybl9tM3U4LnNlYXJjaCh1cmxIYW5kbGVyKToKICAgICAgICAgICAgICAgIGZvciBtM3U4IGluIHBhdHRlcm5fbTN1OC5maW5kYWxsKHVybEhhbmRsZXIpOgogICAgICAgICAgICAgICAgICAgIHBsYXlhYmxlcy5hZGQoJyVzfFJlZmVyZXI9JXMmVXNlci1BZ2VudD0lcycgJSAobTN1OCx1cmwsdWEpKSBpZiBtM3U4LnN0YXJ0c3dpdGgoJ2h0dHAnKSBlbHNlIE5vbmUKICAgICAgICAgICAgaWYgcGF0dGVybl9pZnJhbWUuc2VhcmNoKHVybEhhbmRsZXIpIGFuZCBub3QgX2lmcmFtZToKICAgICAgICAgICAgICAgIGZvciBpZnJhbWUgaW4gcGF0dGVybl9pZnJhbWUuZmluZGFsbCh1cmxIYW5kbGVyKToKICAgICAgICAgICAgICAgICAgICBpZiBpZnJhbWUuc3RhcnRzd2l0aCgnaHR0cCcpIGFuZCBub3QgYW55KHggaW4gaWZyYW1lIGZvciB4IGluIGJhZG1hdGNoKToKICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ3dzdHJlYW0nIGluIGlmcmFtZSBvciAnd2lnaXN0cmVhbScgaW4gaWZyYW1lOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmsyID0gcmVxdWVzdHMuZ2V0KGlmcmFtZSxoZWFkZXJzPWhlYWRlcnMyKS50ZXh0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFja2VyID0gcmUuY29tcGlsZSgnKGV2YWxcKGZ1bmN0aW9uXChwLGEsYyxrLGUsKD86cnxkKS4qKScpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFja2VkID0gcGFja2VyLmZpbmRhbGwobGluazIpWzBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5wYWNrZWQgPSBqc3VucGFjay51bnBhY2socGFja2VkKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZSA9IHJlLmNvbXBpbGUoJycnWyciXShodHRwW14nIl0rKVsnIl0nJycpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFtID0gc291cmNlLmZpbmRhbGwodW5wYWNrZWQpWzBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFtID0gKCclc3x2ZXJpZnlwZWVyPWZhbHNlJlVzZXItQWdlbnQ9TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzYwLjAuMzExMi4xMTMgU2FmYXJpLzUzNy4zNicgJSBzdHJlYW0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxheWFibGVzLmFkZChzdHJlYW0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZTogZmV0Y2hfdXJsKGlmcmFtZSwgX2lmcmFtZT1UcnVlKQogICAgICAgIGV4Y2VwdCBCYXNlRXhjZXB0aW9uOgogICAgICAgICAgICBwYXNzCgogICAgZm9yIHVybCBpbiB1cmxzOgogICAgICAgIHRocmVhZHMgPSBbXQogICAgICAgIHQgPSB0aHJlYWRpbmcuVGhyZWFkKHRhcmdldD1mZXRjaF91cmwsIGFyZ3M9KHVybCwpKQogICAgICAgIHRocmVhZHMuYXBwZW5kKHQpCiAgICAgICAgdC5zdGFydCgpCgogICAgd2hpbGUgVHJ1ZToKICAgICAgICBpZiBkcC5pc2NhbmNlbGVkKCk6CiAgICAgICAgICAgIGJyZWFrCiAgICAgICAgcnVubmluZyA9IFt0IGZvciB0IGluIHRocmVhZHMgaWYgdC5pc19hbGl2ZSgpXQogICAgICAgIGlmIG5vdCBydW5uaW5nOgogICAgICAgICAgICBicmVhawogICAgICAgIG1zZyA9ICJbQ09MT1IgeWVsbG93XVBvdGVudGlhbCBMaW5rcyA9IFtDT0xPUiBsaW1lXSVzIHwgW0NPTE9SIHllbGxvd11TaG91bGQgUGxheSA9IFtDT0xPUiBsaW1lXSVzWy9DT0xPUl0iICUgKHBvdGVudGlhbCxzdHIobGVuKHBsYXlhYmxlcykpKQogICAgICAgIGRwLnVwZGF0ZSAoMTAwLCBtc2cpCiAgICAgICAgdGltZS5zbGVlcCgwLjUpCiAgICAgICAgaWYgUFkyOgogICAgICAgICAgICBpZiB0aHJlYWRpbmcuYWN0aXZlX2NvdW50KCkgPCAzOgogICAgICAgICAgICAgICAgZHAudXBkYXRlICgxMDAsICcnLCAiW0NPTE9SIG9yYW5nZV1TZWFyY2hpbmcgRG9uZSAoLilCb29iaWVzKC4pIDotRFsvQ09MT1JdIikKICAgICAgICAgICAgZWxpZiB0aHJlYWRpbmcuYWN0aXZlX2NvdW50KCkgPCAxNToKICAgICAgICAgICAgICAgIGRwLnVwZGF0ZSAoMTAwLCAnJywgIltDT0xPUiBvcmFuZ2VdU2VhcmNoaW5nIEFsbW9zdCBEb25lLi4uWy9DT0xPUl0iKQogICAgICAgICAgICBlbGlmIHRocmVhZGluZy5hY3RpdmVfY291bnQoKSA8IDI1OgogICAgICAgICAgICAgICAgZHAudXBkYXRlICgxMDAsICcnLCAiW0NPTE9SIG9yYW5nZV1TZWFyY2hpbmcgQWxtb3N0IERvbmUuLlsvQ09MT1JdIikKICAgICAgICAgICAgZWxpZiB0aHJlYWRpbmcuYWN0aXZlX2NvdW50KCkgPCA1MDoKICAgICAgICAgICAgICAgIGRwLnVwZGF0ZSAoMTAwLCAnJywgIltDT0xPUiBvcmFuZ2VdU2VhcmNoaW5nIEFsbW9zdCBEb25lLlsvQ09MT1JdIikKICAgICAgICBlbHNlOgogICAgICAgICAgICBpZiB0aHJlYWRpbmcuYWN0aXZlX2NvdW50KCkgPCAzOgogICAgICAgICAgICAgICAgZHAudXBkYXRlICgxMDAsIG1zZyArICJcbiIrIltDT0xPUiBvcmFuZ2VdU2VhcmNoaW5nIERvbmUgKC4pQm9vYmllcyguKSA6LURbL0NPTE9SXSIpCiAgICAgICAgICAgIGVsaWYgdGhyZWFkaW5nLmFjdGl2ZV9jb3VudCgpIDwgMTU6CiAgICAgICAgICAgICAgICBkcC51cGRhdGUgKDEwMCwgbXNnICsgIlxuIisiW0NPTE9SIG9yYW5nZV1TZWFyY2hpbmcgQWxtb3N0IERvbmUuLi5bL0NPTE9SXSIpCiAgICAgICAgICAgIGVsaWYgdGhyZWFkaW5nLmFjdGl2ZV9jb3VudCgpIDwgMjU6CiAgICAgICAgICAgICAgICBkcC51cGRhdGUgKDEwMCwgbXNnICsgIlxuIisiW0NPTE9SIG9yYW5nZV1TZWFyY2hpbmcgQWxtb3N0IERvbmUuLlsvQ09MT1JdIikKICAgICAgICAgICAgZWxpZiB0aHJlYWRpbmcuYWN0aXZlX2NvdW50KCkgPCA1MDoKICAgICAgICAgICAgICAgIGRwLnVwZGF0ZSAoMTAwLCBtc2cgKyAiXG4iKyJbQ09MT1Igb3JhbmdlXVNlYXJjaGluZyBBbG1vc3QgRG9uZS5bL0NPTE9SXSIpCiAgICAgICAgCiAgICBpZiBwbGF5YWJsZXM6CiAgICAgICAgZm9yIHRpdGxlLHVybCBpbiBlbnVtZXJhdGUocGxheWFibGVzLmNvcHkoKSk6CiAgICAgICAgICAgIGFkZExpbmsoJ1tCXVtDT0xPUiB5ZWxsb3ddTGluayBbQ09MT1IgbGltZV0lc1svQl1bL0NPTE9SXScgJSAoaW50KHRpdGxlKSArIDEpLCB1cmwsIDEwMDAsIGljb24sIGZhbmFydHMsICcnKQogICAgZWxzZTogCiAgICAgICAgYWRkTGluaygnW0JdW0NPTE9SIHllbGxvd11ObyBMaW5rcyBBdmFpbGFibGUsIENoZWNrIENsb3NlciBUbyBTdGFydCBUaW1lWy9CXVsvQ09MT1JdJywndXJsJyw5OTk5OTksaWNvbixmYW5hcnRzLG5hbWUpCiAgICBkcC5jbG9zZSgpCgojICAgICAgICAgICAgICAgICAgIApkZWYgT3BlbkZhbmltZSgpOgogICAgeGJtYy5leGVjdXRlYnVpbHRpbigiQ29udGFpbmVyLlVwZGF0ZShwbHVnaW46Ly9wbHVnaW4udmlkZW8uZmFuaW1lKSIpCmRlZiBPcGVuRmlnaHRjbHViKCk6CiAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCJDb250YWluZXIuVXBkYXRlKHBsdWdpbjovL3BsdWdpbi52aWRlby5GaWdodENsdWIpIikKZGVmIENoZWNrRm9yTGlzdHModXJsKToKICAgIEJhc2VVcmwgPSBiYXNlNjQuYjY0ZGVjb2RlIChiJ2FIUjBjSE02THk5d1lYTjBaV0pwYmk1amIyMHZjbUYzTDNrNGJsbDFWVkJRJykKICAgIGxpbmsgPSByZXF1ZXN0cy5nZXQoQmFzZVVybCkudGV4dAogICAgbWF0Y2ggPSByZS5maW5kYWxsKCc8bGlzdD4oLio/KTwvbGlzdD4nLGxpbmssZmxhZ3M9cmUuRE9UQUxMKQogICAgZm9yIGl0ZW1zIGluIG1hdGNoOgogICAgICAgIGlmICdNT1ZJRVMnIGluIHVybDoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgdGl0bGUgPSByZS5maW5kYWxsKCc8dGl0bGU+KC4qPyk8L3RpdGxlPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgdXJsMiA9IHJlLmZpbmRhbGwoJzxtb3ZpZXM+KC4qPyk8L21vdmllcz4nLGl0ZW1zLGZsYWdzPXJlLkRPVEFMTClbMF0KICAgICAgICAgICAgICAgIGljb24gPSByZS5maW5kYWxsKCc8aWNvbj4oLio/KTwvaWNvbj4nLGl0ZW1zLGZsYWdzPXJlLkRPVEFMTClbMF0KICAgICAgICAgICAgICAgIGlmIG5vdCBpY29uOiBpY29uID0gTW92aWVzSW1nCiAgICAgICAgICAgICAgICBpZiAnWU9VVFVCRTonIGluIHVybDI6CiAgICAgICAgICAgICAgICAgICAgdXJsMiA9IHVybDIucmVwbGFjZSgnWU9VVFVCRTonLCcnKQogICAgICAgICAgICAgICAgICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl0nK3RpdGxlKydbL0JdWy9DT0xPUl0nLHVybDIsNSxpY29uLGZhbmFydCxkZXNjcmlwdGlvbj0nR3JhYiBUaGUgUG9wY29ybiBMZXRzIFdhdGNoIEEgRmlsbScpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGFkZERpcignW0NPTE9SIHllbGxvd11bQl0nK3RpdGxlKydbL0JdWy9DT0xPUl0nLHVybDIsMixpY29uLGZhbmFydCxkZXNjcmlwdGlvbj0nR3JhYiBUaGUgUG9wY29ybiBBbmQgV2F0Y2ggQSBGaWxtJykKICAgICAgICAgICAgZXhjZXB0OiBwYXNzCiAgICAgICAgZWxpZiAnVFZTSE9XUycgaW4gdXJsOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICB0aXRsZSA9IHJlLmZpbmRhbGwoJzx0aXRsZT4oLio/KTwvdGl0bGU+JyxpdGVtcyxmbGFncz1yZS5ET1RBTEwpWzBdCiAgICAgICAgICAgICAgICB1cmwyID0gcmUuZmluZGFsbCgnPHR2c2hvd3M+KC4qPyk8L3R2c2hvd3M+JyxpdGVtcyxmbGFncz1yZS5ET1RBTEwpWzBdCiAgICAgICAgICAgICAgICBpY29uID0gcmUuZmluZGFsbCgnPGljb24+KC4qPyk8L2ljb24+JyxpdGVtcyxmbGFncz1yZS5ET1RBTEwpWzBdCiAgICAgICAgICAgICAgICBpZiBub3QgaWNvbjogaWNvbiA9IFR2U2hvd3NJbWcKICAgICAgICAgICAgICAgIGlmICdZT1VUVUJFOicgaW4gdXJsMjoKICAgICAgICAgICAgICAgICAgICB1cmwyID0gdXJsMi5yZXBsYWNlKCdZT1VUVUJFOicsJycpCiAgICAgICAgICAgICAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXScrdGl0bGUrJ1svQl1bL0NPTE9SXScsdXJsMiw1LGljb24sZmFuYXJ0LGRlc2NyaXB0aW9uPSdMZXRzIFdhdGNoIE91ciBGYXZvdXJpdGUgU2hvd3MnKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBhZGREaXIoJ1tDT0xPUiB5ZWxsb3ddW0JdJyt0aXRsZSsnWy9CXVsvQ09MT1JdJyx1cmwyLDcsaWNvbixmYW5hcnQsZGVzY3JpcHRpb249J0xldHMgV2F0Y2ggT3VyIEZhdm91cml0ZSBTaG93cycpCiAgICAgICAgICAgIGV4Y2VwdDogcGFzcwogICAgICAgIGVsaWYgJ0RFVicgaW4gdXJsOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICB0aXRsZSA9IHJlLmZpbmRhbGwoJzx0aXRsZT4oLio/KTwvdGl0bGU+JyxpdGVtcyxmbGFncz1yZS5ET1RBTEwpWzBdCiAgICAgICAgICAgICAgICB1cmwyID0gcmUuZmluZGFsbCgnPGRldj4oLio/KTwvZGV2PicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgaWNvbiA9IHJlLmZpbmRhbGwoJzxpY29uPiguKj8pPC9pY29uPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgaWYgbm90IGljb246IGljb24gPSBBZGRvbmljb24KICAgICAgICAgICAgICAgIGFkZExpbmsoJ1tDT0xPUiByZWRdW0JdJyt0aXRsZSsnWy9CXVsvQ09MT1JdJyx1cmwyLDEwMDAsaWNvbixmYW5hcnQsZGVzY3JpcHRpb249J0RldiBTdHVmZicpCiAgICAgICAgICAgIGV4Y2VwdDogcGFzcwogICAgICAgIGVsaWYgJ0tJRFMnIGluIHVybDoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgdGl0bGUgPSByZS5maW5kYWxsKCc8dGl0bGU+KC4qPyk8L3RpdGxlPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgdXJsMiA9IHJlLmZpbmRhbGwoJzxraWRzPiguKj8pPC9raWRzPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgaWNvbiA9IHJlLmZpbmRhbGwoJzxpY29uPiguKj8pPC9pY29uPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgaWYgbm90IGljb246IGljb24gPSBNb3ZpZXNJbWcKICAgICAgICAgICAgICAgIGlmICdZT1VUVUJFOicgaW4gdXJsMjoKICAgICAgICAgICAgICAgICAgICB1cmwyID0gdXJsMi5yZXBsYWNlKCdZT1VUVUJFOicsJycpCiAgICAgICAgICAgICAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXScrdGl0bGUrJ1svQl1bL0NPTE9SXScsdXJsMiw1LGljb24sZmFuYXJ0LGRlc2NyaXB0aW9uPSdIYXZlIFNvbWUgRnVuIFdpdGggVGhlIEtpZHMnKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBhZGREaXIoJ1tDT0xPUiB5ZWxsb3ddW0JdJyt0aXRsZSsnWy9CXVsvQ09MT1JdJyx1cmwyLDIsaWNvbixmYW5hcnQsZGVzY3JpcHRpb249J0dyYWIgVGhlIFBvcGNvcm4gQW5kIFdhdGNoIEEgRmlsbScpCiAgICAgICAgICAgIGV4Y2VwdDogcGFzcwogICAgICAgIGVsaWYgJ0dBTUlORycgaW4gdXJsOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICB0aXRsZSA9IHJlLmZpbmRhbGwoJzx0aXRsZT4oLio/KTwvdGl0bGU+JyxpdGVtcyxmbGFncz1yZS5ET1RBTEwpWzBdCiAgICAgICAgICAgICAgICB1cmwyID0gcmUuZmluZGFsbCgnPGdhbWluZz4oLio/KTwvZ2FtaW5nPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgaWNvbiA9IHJlLmZpbmRhbGwoJzxpY29uPiguKj8pPC9pY29uPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgaWYgbm90IGljb246IGljb24gPSBNb3ZpZXNJbWcKICAgICAgICAgICAgICAgIGlmICdZT1VUVUJFOicgaW4gdXJsMjoKICAgICAgICAgICAgICAgICAgICB1cmwyID0gdXJsMi5yZXBsYWNlKCdZT1VUVUJFOicsJycpCiAgICAgICAgICAgICAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXScrdGl0bGUrJ1svQl1bL0NPTE9SXScsdXJsMiw1LGljb24sZmFuYXJ0LGRlc2NyaXB0aW9uPSdIYXZlIFNvbWUgRnVuIFdpdGggVGhlIEtpZHMnKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBhZGREaXIoJ1tDT0xPUiB5ZWxsb3ddW0JdJyt0aXRsZSsnWy9CXVsvQ09MT1JdJyx1cmwyLDIsaWNvbixmYW5hcnQsZGVzY3JpcHRpb249J0dyYWIgVGhlIFBvcGNvcm4gQW5kIFdhdGNoIEEgRmlsbScpCiAgICAgICAgICAgIGV4Y2VwdDogcGFzcwogICAgICAgIGVsaWYgJ1NQT1JUUycgaW4gdXJsOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICB0aXRsZSA9IHJlLmZpbmRhbGwoJzx0aXRsZT4oLio/KTwvdGl0bGU+JyxpdGVtcyxmbGFncz1yZS5ET1RBTEwpWzBdCiAgICAgICAgICAgICAgICB1cmwyID0gcmUuZmluZGFsbCgnPHNwb3J0cz4oLio/KTwvc3BvcnRzPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgaWNvbiA9IHJlLmZpbmRhbGwoJzxpY29uPiguKj8pPC9pY29uPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgaWYgbm90IGljb246IGljb24gPSBNb3ZpZXNJbWcKICAgICAgICAgICAgICAgIGlmICdZT1VUVUJFOicgaW4gdXJsMjoKICAgICAgICAgICAgICAgICAgICB1cmwyID0gdXJsMi5yZXBsYWNlKCdZT1VUVUJFOicsJycpCiAgICAgICAgICAgICAgICAgICAgYWRkRGlyKCdbQ09MT1IgeWVsbG93XVtCXScrdGl0bGUrJ1svQl1bL0NPTE9SXScsdXJsMiw1LGljb24sZmFuYXJ0LGRlc2NyaXB0aW9uPSdIYXZlIFNvbWUgRnVuIFdpdGggVGhlIEtpZHMnKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBhZGREaXIoJ1tDT0xPUiB5ZWxsb3ddW0JdJyt0aXRsZSsnWy9CXVsvQ09MT1JdJyx1cmwyLDIsaWNvbixmYW5hcnQsZGVzY3JpcHRpb249J0dyYWIgVGhlIFBvcGNvcm4gQW5kIFdhdGNoIEEgRmlsbScpCiAgICAgICAgICAgIGV4Y2VwdDogcGFzcwpkZWYgR2V0TGlzdENvbnRlbnQobmFtZSx1cmwsaWNvbmltYWdlKToKICAgIHVybDMgPSB1cmwKICAgIGxpbmsgPSByZXF1ZXN0cy5nZXQodXJsKS50ZXh0CiAgICBpZiAnbm9sZWR5bmFzdHknIGluIHVybDoKICAgICAgICBtYXRjaCA9IHJlLmZpbmRhbGwoJzxpdGVtPiguKj8pPC9pdGVtPicsbGluayxmbGFncz1yZS5ET1RBTEwpCiAgICAgICAgZm9yIGl0ZW1zIGluIG1hdGNoOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBsaW5rcz1yZS5maW5kYWxsKCc8bGluaz4oLis/KTwvbGluaz4nLGl0ZW1zLGZsYWdzPXJlLkRPVEFMTCkKICAgICAgICAgICAgICAgIGlmIGxlbihsaW5rcyk9PTE6CiAgICAgICAgICAgICAgICAgICAgdGl0bGUgPSByZS5maW5kYWxsKCc8dGl0bGU+KC4qPyk8L3RpdGxlPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgICAgIHRpdGxlID0gdGl0bGUuZW5jb2RlKCJ1dGY4IikgaWYgUFkyIGVsc2UgdGl0bGUKICAgICAgICAgICAgICAgICAgICB1cmwgPSByZS5maW5kYWxsKCc8bGluaz4oLio/KTwvbGluaz4nLGl0ZW1zLGZsYWdzPXJlLkRPVEFMTClbMF0KICAgICAgICAgICAgICAgICAgICB0cnk6IGljb24gPSByZS5maW5kYWxsKCc8dGh1bWJuYWlsPiguKj8pPC90aHVtYm5haWw+JyxpdGVtcyxmbGFncz1yZS5ET1RBTEwpWzBdCiAgICAgICAgICAgICAgICAgICAgZXhjZXB0IEluZGV4RXJyb3I6IGljb24gPSBBZGRvbmljb24KICAgICAgICAgICAgICAgICAgICB0cnk6IGZhbmFydCA9IHJlLmZpbmRhbGwoJzxmYW5hcnQ+KC4qPyk8L2ZhbmFydD4nLGl0ZW1zLGZsYWdzPXJlLkRPVEFMTClbMF0KICAgICAgICAgICAgICAgICAgICBleGNlcHQgSW5kZXhFcnJvcjogZmFuYXJ0ID0gZmFuYXJ0cwogICAgICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gPSByZS5maW5kYWxsKCc8ZGVzY3JpcHRpb24+KC4qPyk8L2Rlc2NyaXB0aW9uPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBJbmRleEVycm9yOiBkZXNjcmlwdGlvbiA9ICdObyBEZXNjJwogICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24uZW5jb2RlKCJ1dGY4IikgaWYgUFkyIGVsc2UgZGVzY3JpcHRpb24KICAgICAgICAgICAgICAgICAgICBhZGRMaW5rKCdbQ09MT1IgeWVsbG93XVtCXScrdGl0bGUrJ1svQl1bL0NPTE9SXScsdXJsLDEwMDAsaWNvbixmYW5hcnQsZGVzY3JpcHRpb24pCiAgICAgICAgICAgICAgICBlbGlmIGxlbihsaW5rcyk+MToKICAgICAgICAgICAgICAgICAgICB0aXRsZT1yZS5maW5kYWxsKCc8dGl0bGU+KC4rPyk8L3RpdGxlPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgICAgIHRpdGxlID0gdGl0bGUuZW5jb2RlKCJ1dGY4IikgaWYgUFkyIGVsc2UgdGl0bGUKICAgICAgICAgICAgICAgICAgICB0cnk6IGljb249cmUuZmluZGFsbCgnPHRodW1ibmFpbD4oLis/KTwvdGh1bWJuYWlsPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBJbmRleEVycm9yOiBpY29uID0gQWRkb25pY29uCiAgICAgICAgICAgICAgICAgICAgdHJ5OiBmYW5hcnQ9cmUuZmluZGFsbCgnPGZhbmFydD4oLis/KTwvZmFuYXJ0PicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBJbmRleEVycm9yOiBmYW5hcnQgPSBmYW5hcnRzCiAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbj1yZS5maW5kYWxsKCc8ZGVzY3JpcHRpb24+KC4rPyk8L2Rlc2NyaXB0aW9uPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBJbmRleEVycm9yOiBkZXNjcmlwdGlvbiA9ICdObyBEZXNjJwogICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24uZW5jb2RlKCJ1dGY4IikgaWYgUFkyIGVsc2UgZGVzY3JpcHRpb24KICAgICAgICAgICAgICAgICAgICBhZGREaXIodGl0bGUsdXJsMywzLGljb24sZmFuYXJ0LGRlc2NyaXB0aW9uKQogICAgICAgICAgICBleGNlcHQ6IHBhc3MKICAgIGVsc2U6CiAgICAgICAgbWF0Y2ggPSByZS5maW5kYWxsKCc8Y29udGVudD4oLio/KTwvY29udGVudD4nLGxpbmssZmxhZ3M9cmUuRE9UQUxMKQogICAgICAgIGZvciBpdGVtcyBpbiBtYXRjaDoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgbGlua3M9cmUuZmluZGFsbCgnPGxpbms+KC4rPyk8L2xpbms+JyxpdGVtcyxmbGFncz1yZS5ET1RBTEwpCiAgICAgICAgICAgICAgICBpZiBsZW4obGlua3MpPT0xOgogICAgICAgICAgICAgICAgICAgIHRpdGxlID0gcmUuZmluZGFsbCgnPHRpdGxlPiguKj8pPC90aXRsZT4nLGl0ZW1zLGZsYWdzPXJlLkRPVEFMTClbMF0KICAgICAgICAgICAgICAgICAgICB0aXRsZSA9IHRpdGxlLmVuY29kZSgidXRmOCIpIGlmIFBZMiBlbHNlIHRpdGxlCiAgICAgICAgICAgICAgICAgICAgdXJsID0gcmUuZmluZGFsbCgnPGxpbms+KC4qPyk8L2xpbms+JyxpdGVtcyxmbGFncz1yZS5ET1RBTEwpWzBdCiAgICAgICAgICAgICAgICAgICAgdHJ5OiBpY29uID0gcmUuZmluZGFsbCgnPGltYWdlPiguKj8pPC9pbWFnZT4nLGl0ZW1zLGZsYWdzPXJlLkRPVEFMTClbMF0KICAgICAgICAgICAgICAgICAgICBleGNlcHQgSW5kZXhFcnJvcjogaWNvbiA9IEFkZG9uaWNvbgogICAgICAgICAgICAgICAgICAgIHRyeTogZmFuYXJ0ID0gcmUuZmluZGFsbCgnPHBvc3Rlcj4oLio/KTwvcG9zdGVyPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBJbmRleEVycm9yOiBmYW5hcnQgPSBmYW5hcnRzCiAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiA9IHJlLmZpbmRhbGwoJzxkZXNjcmlwdGlvbj4oLio/KTwvZGVzY3JpcHRpb24+JyxpdGVtcyxmbGFncz1yZS5ET1RBTEwpWzBdCiAgICAgICAgICAgICAgICAgICAgZXhjZXB0IEluZGV4RXJyb3I6IGRlc2NyaXB0aW9uID0gJ05vIERlc2MnCiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbi5lbmNvZGUoInV0ZjgiKSBpZiBQWTIgZWxzZSBkZXNjcmlwdGlvbgogICAgICAgICAgICAgICAgICAgIGFkZExpbmsoJ1tDT0xPUiB5ZWxsb3ddW0JdJyt0aXRsZSsnWy9CXVsvQ09MT1JdJyx1cmwsMTAwMCxpY29uLGZhbmFydCxkZXNjcmlwdGlvbikKICAgICAgICAgICAgICAgIGVsaWYgbGVuKGxpbmtzKT4xOgogICAgICAgICAgICAgICAgICAgIHRpdGxlPXJlLmZpbmRhbGwoJzx0aXRsZT4oLis/KTwvdGl0bGU+JyxpdGVtcyxmbGFncz1yZS5ET1RBTEwpWzBdCiAgICAgICAgICAgICAgICAgICAgdGl0bGUgPSB0aXRsZS5lbmNvZGUoInV0ZjgiKSBpZiBQWTIgZWxzZSB0aXRsZQogICAgICAgICAgICAgICAgICAgIHRyeTogaWNvbj1yZS5maW5kYWxsKCc8aW1hZ2U+KC4rPyk8L2ltYWdlPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBJbmRleEVycm9yOiBpY29uID0gQWRkb25pY29uCiAgICAgICAgICAgICAgICAgICAgdHJ5OiBmYW5hcnQ9cmUuZmluZGFsbCgnPHBvc3Rlcj4oLis/KTwvcG9zdGVyPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBJbmRleEVycm9yOiBmYW5hcnQgPSBmYW5hcnRzCiAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbj1yZS5maW5kYWxsKCc8ZGVzY3JpcHRpb24+KC4rPyk8L2Rlc2NyaXB0aW9uPicsaXRlbXMsZmxhZ3M9cmUuRE9UQUxMKVswXQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBJbmRleEVycm9yOiBkZXNjcmlwdGlvbiA9ICdObyBEZXNjJwogICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24uZW5jb2RlKCJ1dGY4IikgaWYgUFkyIGVsc2UgZGVzY3JpcHRpb24KICAgICAgICAgICAgICAgICAgICBhZGREaXIodGl0bGUsdXJsMywzLGljb24sZmFuYXJ0LGRlc2NyaXB0aW9uKQogICAgICAgICAgICBleGNlcHQ6IHBhc3MKZGVmIFRNREJTQ1JBUEUodXJsKToKICAgIGlmICdUT1AgTU9WSUVTJyBpbiB1cmw6CiAgICAgICAgdXJsID0gKCdodHRwczovL2FwaS50aGVtb3ZpZWRiLm9yZy8zL21vdmllL3BvcHVsYXI/YXBpX2tleT0lcyZsYW5ndWFnZT1lbi1VUyZwYWdlPTEnICUgdG1kYmFwaSkKICAgIGVsaWYgJ05PVyBQTEFZSU5HJyBpbiB1cmw6CiAgICAgICAgdXJsID0gKCdodHRwczovL2FwaS50aGVtb3ZpZWRiLm9yZy8zL21vdmllL25vd19wbGF5aW5nP2FwaV9rZXk9JXMmbGFuZ3VhZ2U9ZW4tVVMmcGFnZT0xJyAlIHRtZGJhcGkpCiAgICBlbGlmICdDSU5FTUEnIGluIHVybDoKICAgICAgICB1cmwgPSAoJ2h0dHBzOi8vYXBpLnRoZW1vdmllZGIub3JnLzMvZGlzY292ZXIvbW92aWU/YXBpX2tleT0lcyZ3aXRoX3JlbGVhc2VfdHlwZT0yfDMmcmVnaW9uPVVTJyAlIHRtZGJhcGkpCiAgICBlbGlmICdUT1AgVFYnIGluIHVybDoKICAgICAgICB1cmwgPSAoJ2h0dHBzOi8vYXBpLnRoZW1vdmllZGIub3JnLzMvdHYvcG9w'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))